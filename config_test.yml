#version: 2.1
#
#defaults: &defaults
#  working_directory: /tmp/tests
#
#executors:
#  ruby-executor:
#    docker:
#      - image: circleci/ruby:2.6.3-node-browsers
#
#orbs:
#  cucumber-test-orb:
#    orbs:
#      aws-cli: circleci/aws-cli@0.1.19
#    executors:
#      ruby-executor:
#        docker:
#          - image: circleci/ruby:2.6.3-node-browsers
#    commands:
#      greetings:
#        steps:
#          - run: echo "Welcome to cucumber-test-orb"
#      aws_setup:
#        steps:
#          - aws-cli/setup:
#              aws-access-key-id: QA_AWS_ACCESS_KEY_ID
#              aws-secret-access-key: QA_AWS_SECRET_ACCESS_KEY
#              aws-region: QA_AWS_REGION
#    jobs:
#      autoregression:
#        <<: *defaults
#        parameters:
#          slack:
#            description: If true, send to slack information
#            type: boolean
#            default: false
#        executor: ruby-executor
#        steps:
#          - checkout
#          - run:
#              name: download dependencies
#              command: |
#                gem install bundler
#                bundle install
#          - attach_workspace:
#              at: /tmp/tests/
#          - run:
#              name: review collected LAUNCH_IDs
#              command: |
#                ls /tmp/tests/shared_folder
#          - run:
#              name: merge report chunks
#              command: |
#                bundle exec rake _merge_report_launches
#          - run:
#              name: sent notification to slack if SLACK==true
#              command: |
#                SLACK="<<parameters.slack>>" bundle exec rake _sent_slack_notification
#          - run:
#              name: check execution status
#              command: |
#                files=(/tmp/tests/shared_folder/failed*.marker)
#                if [ -e "${files[0]}" ];
#                then
#                    echo "ERROR: regression suite failed. ["${#files[@]}"] - count of failed nodes with tests."
#                	for each in "${files[@]}"; do echo "Marker: $each with failed tests: $(cat $each)"; done
#                	exit 1
#                fi
#                echo "Congratulations, tests passed"
#          - store_artifacts:
#              path: /tmp/tests/shared_folder
#      run_tests:
#        <<: *defaults
#        parameters:
#          remote_run:
#            description: Remote run, if true - browsert running on BrowserStuck server, if false, locally
#            type: boolean
#            default: true
#          env:
#            description:  Environment agains tests being run, for example staging
#            type: string
#            default: staging
#          launch:
#            description:  Report portal launch name
#            type: string
#            default: default_report_launch
#          folder:
#            description:  Folder with tests to run. features/tests - all tests, features/tests/smoke or features/tests/regression
#            type: string
#            default: features/tests
#          local_report_name:
#            description:  name of HTML report that will be generated locally
#            type: string
#            default: report_cucumber
#          threads:
#            description: Count of nodes for parallel run
#            type: integer
#            default: 1
#        executor: ruby-executor
#        parallelism: <<parameters.threads>>
#        steps:
#          - checkout
#          - run:
#              name: create sharted folder
#              command: |
#                mkdir -p shared_folder
#                mkdir output
#          - aws_setup
#          - run:
#              name: install denepdencies
#              command: |
#                gem install bundler
#                bundle install
#          - run:
#              name: split tests for nodes
#              command: |
#                circleci tests glob "<<parameters.folder>>" | circleci tests split --split-by=timings > /tmp/tests-to-run
#                cat /tmp/tests-to-run
#          - run:
#              name: Cucumber e2e tests execution...
#              command: |
#                REMOTE_RUN=<<parameters.remote_run>> RUBY_ENV=<<parameters.env>> rp_launch=<<parameters.launch>> bundle exec cucumber --tags ~@skip --retry 1 $(cat /tmp/tests-to-run) --format json --out output/tests.cucumber --format html --out output/<<parameters.local_report_name>>.html -f ReportPortal::Cucumber::Formatter || true
#          - run:
#              name: copy marker files (launch id, stats) to shared folder
#              command: |
#                echo "### Original files in OUTPUT folder"
#                ls output/
#
#                echo "### Adding node ID prefix to all files at current node"
#                for file in output/; do mv "$file" "${file/%.}"_$CIRCLE_NODE_INDEX"."${file##*.}""; done
#
#                echo "### Copy artifacts to shared folder:"
#                cp -R output/. /tmp/tests/shared_folder
#                ls /tmp/tests/shared_folder
#          - persist_to_workspace:
#              root: /tmp/tests
#              paths:
#                - shared_folder
#          - store_artifacts:
#              path: output
#          - store_test_results:
#              path: output
#
#jobs:
#  helpers:
#    executor: ruby-executor
#    steps:
#      - checkout
#      - run:
#          name: set-up
#          command: |
#            gem install bundler
#            bundle install
#            mkdir output
#            mkdir output/timings
#      - run:
#          name: Mock server run
#          command: |
#            rackup ./apps/mock-server/config.ru -p 4567 && sleep 10
#          background: true
#      - run:
#          name: Check rake tasks
#          command: |
#            rake lead_flow_simulation
#      - run:
#          name: Mock server test
#          command: |
#            timeout 70 bash -c 'while [[ "$(curl --max-time 60 -d "campaignID=24&lastName=happy_path" -H "Content-Type: application/json" -s -o  /dev/null -w ''%{http_code}'' -X POST http://localhost:4567/service/submit)" != "200" ]]; do sleep 5; done' || false
#
#workflows:
#  version: 2
#  commit:
#    jobs:
#      - cucumber-test-orb/run_tests:
#          name: prepare_autoregression
#          remote_run: false
#          env: staging
#          launch: regression_staging
#          folder: features/tests/*/.feature
#          local_report_name: regression_staging
#          threads: 8
#      - cucumber-test-orb/autoregression:
#          name: autoregression
#          slack: true
#          requires:
#            - prepare_autoregression
#  daily:
#    triggers:
#      - schedule:
#          cron: '0 13 * * *'
#          filters:
#            branches:
#              only:
#                - master
#    jobs:
#      - cucumber-test-orb/run_tests:
#          name: prepare_autoregression
#          remote_run: false
#          env: staging
#          launch: regression_staging_daily
#          folder: features/tests/*/.feature
#          local_report_name: regression_staging_daily
#          threads: 5
#      - cucumber-test-orb/autoregression:
#          name: autoregression
#          slack: true
#          requires:
#            - prepare_autoregression